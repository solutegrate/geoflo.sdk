/*! For license information please see pinning.geoflo-sdk.min.js.LICENSE.txt */
"use strict";(self.webpackChunk_solutegrate_geoflo_sdk=self.webpackChunk_solutegrate_geoflo_sdk||[]).push([[38],{115:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});const i=function(e){var t=this.geoflo;function n(e){if(!e||!e.length)return!1;e.forEach((function(e){this.updatedFeatures.find((function(t){return t.id===e.id}))||this.updatedFeatures.push(t.Utilities.cloneDeep(e.feature))}),this)}this.type=e.type,this.updatedFeatures=[],this.activate=function(){this.updatedFeatures=[],this.enabled=!0,t.options.pinning.enable=!0},this.deactivate=function(){this.enabled=!1,t.options.pinning.enable=!1,this.resetFeatures(),delete this.buffer,delete t.pinableFeatures,delete t.pinningFeatures,this.updatedFeatures=[]},this.getFeatures=function(){return t.pinnedFeatures&&t.pinnedFeatures.length?t.pinnedFeatures.map((function(e){return e.feature})):[]},this.setBuffer=function(e){if(delete this.buffer,!this.enabled)return!1;if(!e||!t.options.pinning.buffer)return!1;var n=turf.buffer(turf.point(e),t.options.pinning.buffer),i=turf.polygon(n.geometry.coordinates);return this.buffer={feature:n,radius:i,coords:e},this.buffer},this.setFeatures=function(e){return t.pinableFeatures=[],!(!this.enabled||!e)&&(t.pinableFeatures=this.getNearByFeatures(e),t.fire("pinning.add",{features:t.pinableFeatures,buffer:this.buffer}),t.pinableFeatures)},this.resetFeatures=function(){if(!this.updatedFeatures.length)return!1;t.addFeatures(this.updatedFeatures,!0)},this.updateFeatures=function(){return!!this.enabled&&(t.pinableFeatures&&t.pinableFeatures.length?(n.call(this,t.pinableFeatures),t.Features.updateFeatures(t.pinableFeatures,{type:"pinning",coords:t.snappedVertex,addUnits:!0}),t.pinnedFeatures=t.Utilities.cloneDeep(t.pinableFeatures),t.fire("pinning.update",{feature:t.hotFeature,vertex:turf.point(t.snappedVertex),features:t.pinnedFeatures}),t.pinningFeatures):(delete t.pinningFeatures,!1))},this.getNearByFeatures=function(e){if(!this.enabled||!e)return!1;var n=t.hotFeature,i=t.options.snapping.distance*Math.pow(2,Math.max(1,19-t.map.getZoom()))/1e5,r=this.setBuffer(e),a=t.getRenderedDrawnFeatures({lng:e[0],lat:e[1]},i),s=[];return a.forEach((function(e){turf.coordEach(e,(function(i,a){var u=!1;r.radius&&turf.booleanWithin(turf.point(i),r.radius)&&(u=!0),!u&&r.coords&&t.Utilities.isPointEqual(i,r.coords)&&(u=!0),u&&(n&&n.id===e.id||s.push({id:e.id||e.properties.id,type:e.properties.type,index:a,feature:e}))}))})),s},t.options.pinning.enable&&this.activate()}}}]);