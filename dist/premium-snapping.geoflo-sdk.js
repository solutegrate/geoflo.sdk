/*! For license information please see premium-snapping.geoflo-sdk.js.LICENSE.txt */
"use strict";(self.webpackChunk_solutegrate_geoflo_sdk=self.webpackChunk_solutegrate_geoflo_sdk||[]).push([[519],{228:(t,e,n)=>{function r(t){return function(t){if(Array.isArray(t))return i(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return i(t,e);var n={}.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?i(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}n.r(e),n.d(e,{default:()=>s});const s=function(t){var e=this.geoflo;function n(t,n,r,s){var o,a=function(t,e){var n=[],r={},s=function(t,e){function n(t,e){return new r(t,e)}function r(t,e){var n={kilometers:1,miles:1e3/1609.344,nauticalmiles:1e3/1852,meters:1e3,metres:1e3,yards:1e3/.9144,feet:1e3/.3048,inches:1e3/.0254};if(void 0===t)throw new Error("No latitude given.");if(e&&!n[e])throw new Error("Unknown unit "+e+". Use one of: "+Object.keys(n));var r=e?n[e]:1,i=Math.cos(t*Math.PI/180),s=2*i*i-1,o=2*i*s-i,a=2*i*o-s,u=2*i*a-o;this.kx=r*(111.41513*i-.09455*o+12e-5*u),this.ky=r*(111.13209-.56605*s+.0012*a)}return n.fromTile=function(t,e,n){var i=Math.PI*(1-2*(t+.5)/Math.pow(2,e));return new r(180*Math.atan(.5*(Math.exp(i)-Math.exp(-i)))/Math.PI,n)},n.units={kilometers:1,miles:1e3/1609.344,nauticalmiles:1e3/1852,meters:1e3,metres:1e3,yards:1e3/.9144,feet:1e3/.3048,inches:1e3/.0254},r.prototype={equals:function(t,e){return t[0]===e[0]&&t[1]===e[1]},interpolate:function(t,e,n){var r=e[0]-t[0],i=e[1]-t[1];return[t[0]+r*n,t[1]+i*n]},distance:function(t,e){var n=(t[0]-e[0])*this.kx,r=(t[1]-e[1])*this.ky;return Math.sqrt(n*n+r*r)},bearing:function(t,e){var n=(e[0]-t[0])*this.kx,r=(e[1]-t[1])*this.ky;if(!n&&!r)return 0;var i=180*Math.atan2(-r,n)/Math.PI+90;return i>180&&(i-=360),i},destination:function(t,e,n){var r=(90-n)*Math.PI/180;return this.offset(t,Math.cos(r)*e,Math.sin(r)*e)},offset:function(t,e,n){return[t[0]+e/this.kx,t[1]+n/this.ky]},lineDistance:function(t){for(var e=0,n=0;n<t.length-1;n++)e+=this.distance(t[n],t[n+1]);return e},area:function(t){for(var e=0,n=0;n<t.length;n++)for(var r=t[n],i=0,s=r.length,o=s-1;i<s;o=i++)e+=(r[i][0]-r[o][0])*(r[i][1]+r[o][1])*(n?-1:1);return Math.abs(e)/2*this.kx*this.ky},along:function(t,e){var n=0;if(e<=0)return t[0];for(var r=0;r<t.length-1;r++){var i=t[r],s=t[r+1],o=this.distance(i,s);if((n+=o)>e)return this.interpolate(i,s,(e-(n-o))/o)}return t[t.length-1]},pointOnLine:function(t,e){for(var n,r,i,s,o=1/0,a=0;a<t.length-1;a++){var u=t[a][0],c=t[a][1],l=(t[a+1][0]-u)*this.kx,p=(t[a+1][1]-c)*this.ky;if(0!==l||0!==p){var f=((e[0]-u)*this.kx*l+(e[1]-c)*this.ky*p)/(l*l+p*p);f>1?(u=t[a+1][0],c=t[a+1][1]):f>0&&(u+=l/this.kx*f,c+=p/this.ky*f)}var d=(l=(e[0]-u)*this.kx)*l+(p=(e[1]-c)*this.ky)*p;d<o&&(o=d,n=u,r=c,i=a,s=f)}return{point:[n,r],index:i,t:s}},lineSlice:function(t,e,n){var r=this.pointOnLine(n,t),i=this.pointOnLine(n,e);if(r.index>i.index||r.index===i.index&&r.t>i.t){var s=r;r=i,i=s}var o=[r.point],a=r.index+1,u=i.index;!this.equals(n[a],o[0])&&a<=u&&o.push(n[a]);for(var c=a+1;c<=u;c++)o.push(n[c]);return this.equals(n[u],i.point)||o.push(i.point),o},lineSliceAlong:function(t,e,n){for(var r=0,i=[],s=0;s<n.length-1;s++){var o=n[s],a=n[s+1],u=this.distance(o,a);if((r+=u)>t&&0===i.length&&i.push(this.interpolate(o,a,(t-(r-u))/u)),r>=e)return i.push(this.interpolate(o,a,(e-(r-u))/u)),i;r>t&&i.push(a)}return i},bufferPoint:function(t,e){var n=e/this.ky,r=e/this.kx;return[t[0]-r,t[1]-n,t[0]+r,t[1]+n]},bufferBBox:function(t,e){var n=e/this.ky,r=e/this.kx;return[t[0]-r,t[1]-n,t[2]+r,t[3]+n]},insideBBox:function(t,e){return t[0]>=e[0]&&t[0]<=e[2]&&t[1]>=e[1]&&t[1]<=e[3]}},n(t,e)}(e[1]);return t.forEach((function(t){var o=t.id||t.properties.id;if(void 0===r[o]){r[o]=!0;var a=t.geometry.type;if("LineString"===a)t.geometry.coordinates&&i(s,t.geometry.coordinates,e).forEach((function(t){t.id=o,t.dist=s.distance(t.coords,e),n.push(t)}));else if("Point"===a){var u={id:o,type:"vertex",coords:t.geometry.coordinates,lineEdge:!0};u.dist=s.distance(u.coords,e),n.push(u)}else if("Polygon"===a){if(turf.booleanWithin(turf.point(e),t))return;t.geometry.coordinates.forEach((function(t,r){i(s,t,e).forEach((function(t){t.id=o,t.polygonCoordsArray=r,t.dist=s.distance(t.coords,e),n.push(t)}))}))}}})),n}(t,n),u=null,c=null,l=e.id||"id";return a.forEach((function(t){var e=t.dist;null!==e&&("vertex"===t.type?null===u?u=t:void 0!==s?1e3*e<s&&u&&u.lineEdge&&(u=t):e<=u.dist&&(e===u.dist?u.lineEdge&&(u=t):u=t):e<r&&(null!==c&&e===c.dist&&c[l]!==t[l]&&"linepoint"===c.type&&(t.distance1<=c.distance1&&t.distance2<=c.distance2||t.distance2<=c.distance1&&t.distance1<=c.distance2)&&(c=t),(null===c||e<c.dist)&&(c=t,o=t.border1&&t.border2?{border1:t.border1,border2:t.border2,distance1:t.distance1,distance2:t.distance2}:null)))})),null!==u?null!==c?u.dist<r?Object.assign({borders:null},u):Object.assign({borders:o},c):Object.assign({borders:null},u):null!==c?Object.assign({borders:o},c):null}function i(t,e,n){var r=[],i=t.pointOnLine(e,n),s=i.point,o=i.index,a={type:"linepoint",coords:s},u=e[o],c=e[o+1],l=t.distance(u,n),p=t.distance(c,n),f=!1,d=null;return l<p?(f=0===o,d=u):(f=o+1===e.length-1,d=c),a.border1=u,a.distance1=l,a.border2=c,a.distance2=p,r.push(a),r.push({type:"vertex",coords:d,lineEdge:f}),r}function s(t,n){return e.statics.constants.CIRCUM*Math.cos(t*(Math.PI/180))/Math.pow(2,n+8)}function o(t){return t?(e.Utilities.setProperty(t,"type",e.currentMode.type),e.map.getSource(e.statics.constants.sources.SNAP).setData(turf.featureCollection([t])),t):(e.map.getSource(e.statics.constants.sources.SNAP).setData(turf.featureCollection([])),e.snapFeature)}this.type=t.type,this.activate=function(){this.enabled=!0,e.options.snapping.enable=!0},this.deactivate=function(){this.enabled=!1,e.options.snapping.enable=!1,e.updateMeshData([],!0)},this.getClosest=function(t,r){var i=e.options.snapping.distance*Math.pow(2,Math.max(1,19-e.map.getZoom()))/1e5,o=!!e.options.snapping.pixels&&e.options.snapping.pixels*s(t[1],e.map.getZoom()),a=n(r=r?e.getRenderedSnapFeatures({lng:t[0],lat:t[1]},i):[e.hotFeature],t,i,o);return{point:a,coords:t=!!a&&((o||"vertex"===a.type&&a.dist<=i)&&a.coords)}},this.setClosest=function(t,i,o){var a,u=null,c=e.options.snapping.distance*Math.pow(2,Math.max(1,19-e.map.getZoom()))/1e5,l=!!e.options.snapping.pixels&&e.options.snapping.pixels*s(t[1],e.map.getZoom()),p=!(!e.pinableFeatures||!e.pinableFeatures.length)&&["case",["any"].concat(r(e.pinableFeatures.map((function(t){return["==",["get","id"],t.id||t.properties.id]})))),!1,!0],f=e.getRenderedFeatures({lng:t[0],lat:t[1]},c,p),d=!(!f||!f.length)&&n(f,t,c,l);if(e.closestPoint=d,!f&&!i||!d&&!i)return this.updateFeature(t);if(!d||!d.coords)return u;if(o||!e.lastClick)u=turf.point(d.coords);else{if(Array.isArray(e.lastClick.coords)&&Array.isArray(e.lastClick.coords[0])&&(e.lastClick.coords=e.lastClick.coords[0]),a=turf.distance(turf.point(t),turf.point(e.lastClick.coords)),e.Utilities.isPointEqual(e.lastClick.coords,d.coords)&&a>e.options.snapping.tolerance)return this.updateFeature(t);u=turf.lineString([e.lastClick.coords,d.coords])}return e.fire("snapping.add",{closest:d,snapped:u}),u},this.setFeature=function(t,n){if(e.touchClick)return null;if(!(t=t||e.snapFeature)&&n)return o(turf.point(n));if(!t)return e.map.getSource(e.statics.constants.sources.SNAP).setData(turf.featureCollection([])),null;var r=t.geometry.coordinates,i=n||e.lastClick.coords,s=e.firstClick.coords,a="Polygon"===this.type||"Polygon"===t.properties.type;if(!("LineString"===t.geometry.type)||r.length<2)t=o(a?turf.lineString([s,i]):turf.point(i));else if(e.hotFeature){var u=e.hotFeature.geometry.coordinates;a&&r.pop(),u.splice.apply(u,[-1,1].concat(e.Utilities.consumableArray(r)))}else e.hotFeature=turf.lineString(r);return e.Utilities.setProperty(e.hotFeature,"type",this.type),t=o(a?turf.lineString([s,i]):turf.point(i)),e.snapFeature=t,e.snapFeature},this.setVertex=function(){var t=e.Snapping.enabled;e.bypassSnapping&&(t=!1);var n=e.Routing&&e.Routing.enabled;return e.bypassRouting&&(n=!1),!(!t||!e.snappedVertex)&&(e.snapFeature=this.setClosest(e.snappedVertex,!0,!0),n&&(e.snapFeature=e.Routing.getClosest()||e.snapFeature),e.snapFeature?(e.Utilities.setProperty(e.snapFeature,"type",e.currentMode.type),e.map.getSource(e.statics.constants.sources[n?"ROUTE":"SNAP"]).setData(turf.featureCollection([e.snapFeature])),e.hotFeature.geometry.coordinates[e.dragIndex]=e.snapFeature.geometry.coordinates,e.map.getSource(e.statics.constants.sources.HOT).setData(turf.featureCollection([e.hotFeature])),void e.fire("vertex.dragsnap",{feature:e.hotFeature,vertex:turf.point(e.snappedVertex)})):e.map.getSource(e.statics.constants.sources.SNAP).setData(turf.featureCollection([])))},this.addFeature=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2?arguments[2]:void 0;if(e.map.getSource(e.statics.constants.sources.SNAP).setData(turf.featureCollection([])),e.map.getSource(e.statics.constants.sources.ROUTE).setData(turf.featureCollection([])),!t||r)return!1;n&&(t.properties=e.Utilities.assignDeep(e.Utilities.cloneDeep(n),t.properties)),e.snapFeature=t,e.map.getSource(e.statics.constants.sources[t.properties.routing?"ROUTE":"SNAP"]).setData(turf.featureCollection([e.snapFeature]))},this.updateFeature=function(t){if(e.closestPoint=null,!e.lastClick)return null;if(!e.firstClick||e.mouseIsDown)return null;var n=e.Features.getType(e.hotFeature)||e.currentMode.type,r=e.hotFeature?e.Utilities.getLastIndexCoords(e.hotFeature):e.lastClick.coords,i=turf.point(t),s=n&&"Polygon"===n&&e.hotFeature?[r,t,e.firstClick.coords]:[r,t],o=turf.lineString(s);o.properties.type=n,o.properties.hint=!0;var a="feet",u=e.Features.convertUnits(e.hotFeature,0,a);return i=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=e.map.getSource(e.statics.constants.sources.HOTTEXT)._data.features;r.length&&r[r.length-1].properties.mouseLine&&r.pop();return t.properties.units=n.units,t.properties.unit=n.unit,t.properties.text="".concat(n.units," ").concat(n.unit),t.properties.transform="uppercase",t.properties.anchor="top-left",t.properties.mouseLine=!0,r.push(t),e.map.getSource(e.statics.constants.sources.HOTTEXT).setData(turf.featureCollection(r)),t}(i,{units:u+=e.Features.convertUnits(o,0,a),unit:a}),o},e.options.snapping.enable&&this.activate()}}}]);