const path=require("path"),fs=require("fs/promises"),{exec:exec}=require("child_process"),webpack=require("webpack"),TerserPlugin=require("terser-webpack-plugin"),HtmlWebpackPlugin=require("html-webpack-plugin"),WebpackObfuscator=require("webpack-obfuscator"),jsdoc2md=require("jsdoc-to-markdown"),packageJson=require("./package.json"),domain="sdk.geoflo.pro",id="geoflo",input="index.js",args=process.argv,mode=args[2],entry=path.resolve(__dirname,input),tutorials={basic:{title:`Version ${packageJson.version}`}},DISCLAIMER=`\n/*! \n * GeoFlo SDK\n * Version ${packageJson.version}\n * Generated on: ${(new Date).toISOString()}\n * Copyright (c) 2022 - present | @solutegrate/geoflo\n */\n`,HEADER='\n<p style="align-items: center; display: flex; flex-direction: row; justify-content: center;">\n  <a style="margin:2px;color:transparent;" href="https://sdk.geoflo.pro/license.txt" target="_blank" rel="noopener noreferrer">\n      <img src="https://img.shields.io/badge/License-MPL-blue.svg?style=flat&label=License&color=333333" alt="MPL 2.0 License" />\n  </a>\n  <a style="margin:2px;color:transparent;" href="https://docs.geoflo.pro/tutorial-basic.html" target="_blank" rel="noopener noreferrer">\n    <img src="https://img.shields.io/badge/GeoFlo-Demo-blue.svg?color=ff7676" alt="GeoFlo Demo" />\n  </a>\n  <a style="margin:2px;color:transparent;" href="https://sdk.geoflo.pro/geoflo.min.js" target="_blank" rel="noopener noreferrer">\n    <img src="https://img.shields.io/badge/GeoFlo-SDK-blue.svg?color=d7ef7e" alt="GeoFlo SDK" />\n  </a>\n</p>\n';console.log(`Building ${id} in ${mode} mode...`);let options={mode:mode,watch:!1,devtool:"development"===mode&&"inline-source-map",stats:{colors:!0},entry:entry,output:{path:path.resolve(__dirname,"development"===mode?"./dev":"./dist"),filename:"development"===mode?`${id}.js`:`${id}.min.js`,chunkFilename:"development"===mode?`${id}.[name].js`:`${id}.[name].min.js`,publicPath:"development"===mode?"/":`https://${domain}/`},module:{rules:[{test:/\.js$/,exclude:/node_modules/,use:{loader:"babel-loader",options:{presets:["@babel/preset-env"]}}}]},resolve:{extensions:[".json",".js",".jsx"]},plugins:[new webpack.BannerPlugin({banner:DISCLAIMER.trim()})]};async function build(e,o){if(e)return console.error("Error building:",e),process.exit(1);if(!await fs.readFile(path.join(options.output.path,options.output.filename),"utf8"))return console.error("Error handling JS file");if("development"===mode)return!0;const t=await fs.readFile(path.resolve(__dirname,"LICENSE"),"utf8"),n=await fs.readFile(path.resolve(__dirname,"./index.css"),"utf8");await fs.writeFile(path.join(options.output.path,"license.txt"),t),await fs.writeFile(path.resolve(__dirname,options.output.path+"/"+id+".css"),n);const s=path.resolve(__dirname,options.output.path),i=await fs.readdir(s);for(const e of i)if(e.endsWith(".js")){let o=await fs.readFile(path.join(s,e),"utf8");o=o.replace("/*! For license information please see geoflo","/*! For license information please see https://sdk.geoflo.pro/geoflo"),o=o.replace(".txt */",`.txt */\n${DISCLAIMER}`),await fs.writeFile(path.join(s,e),o,"utf8")}else if(e.endsWith(".js.LICENSE.txt")){let o=await fs.readFile(path.join(s,e),"utf8");o=o+"\n"+t,await fs.writeFile(path.join(s,e),o,"utf8")}return await docs(),!0}async function docs(){const e=path.resolve(__dirname,"docs"),o=await fs.readdir(e),t=o.find((e=>e.startsWith("manifest")&&e.endsWith(".json")));try{await fs.writeFile(path.join(e,"tutorials","tutorial.json"),JSON.stringify(tutorials,null,4));for(const t of o)if(t.endsWith(".html")){const o=path.join(e,t);await fs.unlink(o),console.log(`Deleted file: ${o}`)}console.log("Cleared .html files in the docs directory.")}catch(e){console.error(`Error clearing .html files in docs directory: ${e.message}`)}try{await execPromise("npx jsdoc -X -c ./jsdoc.config.json > ./docs/jsdoc-output.json"),console.log("JSDoc JSON Complete"),await execPromise("npx jsdoc -c ./jsdoc.config.json"),console.log("JSDoc HTML Complete"),await generateMarkdownFile("GeoFlo");for(const n of o)if(n.endsWith(".js.html")){const o=path.join(e,n);await fs.unlink(o),console.log(`Deleted file: ${o}`)}else if(n.endsWith(".html")){let o=await fs.readFile(path.join(e,n),"utf8");o=o.replace("</title>",`</title>\n\n\t\t\t\t\t<link rel="manifest" href="./${t}">\n\n\t\t\t\t\t<link rel="apple-touch-icon" sizes="180x180" href="https://geoflo.s3.us-east-1.amazonaws.com/apple-touch-icon.png">\n\n\t\t\t\t\t<link rel="icon" type="image/png" sizes="32x32" href="https://geoflo.s3.us-east-1.amazonaws.com/favicon-32x32.png">\n\n\t\t\t\t\t<link rel="icon" type="image/png" sizes="16x16" href="https://geoflo.s3.us-east-1.amazonaws.com/favicon-16x16.png">\n\n\t\t\t\t`),await fs.writeFile(path.join(e,n),o,"utf8")}}catch(e){console.error(`Error generating JSDoc ${e.message}`)}}function execPromise(e){return new Promise(((o,t)=>{exec(e,((e,n,s)=>{if(e)return t(new Error(`Error: ${e.message}\n${s}`));o(n)}))}))}async function generateMarkdownFile(e){return!0}"production"===mode&&(options.optimization={splitChunks:{chunks:"all"},minimize:!0,minimizer:[new TerserPlugin({terserOptions:{ecma:void 0,parse:{},compress:{drop_console:!0},mangle:!0,output:null,format:null,toplevel:!1,nameCache:null,keep_classnames:!0,keep_fnames:!1}})]}),webpack(options,build);